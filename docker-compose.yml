version: '3.9'

services:

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch
    build:
      context: ./
      dockerfile: ./elasticsearch/Dockerfile
    restart: unless-stopped
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    environment:
      - discovery.type=single-node
      - cluster.name=docker-elasticsearch-cluster
      - node.name=node
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - elk_stack
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    healthcheck:
      test: [ "CMD", "curl", "-s" ,"-f", "elasticsearch:9200/_cat/health" ]
      interval: 2s
      timeout: 10s
      retries: 30

  kibana:
    container_name: kibana
    image: kibana
    build:
      context: ./
      dockerfile: ./kibana/Dockerfile
    ports:
      - 5601:5601
    networks:
      - elk_stack
    healthcheck:
      test: [ "CMD", "curl", "-f", "kibana:5601" ]
      interval: 2s
      timeout: 10s
      retries: 30
    depends_on:
      elasticsearch: { condition: service_healthy }

  logstash:
    container_name: logstash
    image: logstash
    build:
      context: ./
      dockerfile: ./logstash/Dockerfile
    restart: 'no'
    environment:
      - ES_JAVA_OPTS=-Xmx256m -Xms256m
    ports:
      - 5044:5044
      - "5044:5044/udp"
    networks:
      - elk_stack
    depends_on:
      kibana: { condition: service_healthy }

  metricbeat:
    hostname: metricbeat
    container_name: metricbeat
    image: metricbeat
    build:
      context: ./
      dockerfile: ./metricbeat/Dockerfile
    restart: on-failure
    command: [ "--strict.perms=false" ]
    networks:
      - elk_stack
    volumes:
      - metricbeat:/usr/share/metricbeat/data:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      kibana: { condition: service_healthy }

networks:
  elk_stack:
    driver: bridge

volumes:
  elasticsearch:
    driver: local
  metricbeat:
    driver: local
